{"version":3,"sources":["components/Form/form.js","components/ContactList/contactList.js","components/Filter/filter.js","App.js","reportWebVitals.js","index.js"],"names":["Form","state","contacts","name","number","nameInputId","shortid","generate","numberInputId","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","console","log","props","onSubmit","reset","class","className","this","htmlFor","type","onChange","id","Component","ContactList","onDeleteContact","map","onClick","aria-hidden","Filter","App","filter","formSubmitHandler","newContact","find","contact","alert","changeFilter","getContacts","normalizedFilter","toLowerCase","includes","deleteContact","contactId","prevState","visibleContacts","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bfc5ce18.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport shortid from \"shortid\";\r\nimport \"./form.scss\";\r\nclass Form extends Component {\r\n  state = {\r\n    contacts: [],\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  nameInputId = shortid.generate();\r\n  numberInputId = shortid.generate();\r\n\r\n  handleChange = (e) => {\r\n    const { name, value } = e.currentTarget;\r\n\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    const { name, number } = this.state;\r\n    e.preventDefault();\r\n\r\n    console.log(this.state);\r\n    this.props.onSubmit(name, number);\r\n\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <header class=\"page-header\">\r\n        <form className=\"user-info-form\" onSubmit={this.handleSubmit}>\r\n          <label className=\"label\" htmlFor={this.nameInputId}>\r\n            Name\r\n            <input\r\n              className=\"form-input\"\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={this.state.name}\r\n              onChange={this.handleChange}\r\n              id={this.nameInputId}\r\n            ></input>\r\n          </label>\r\n          <label className=\"label\" htmlFor={this.numberInputId}>\r\n            Number\r\n            <input\r\n              className=\"form-input\"\r\n              type=\"text\"\r\n              name=\"number\"\r\n              value={this.state.number}\r\n              onChange={this.handleChange}\r\n              id={this.numberInputId}\r\n            />\r\n          </label>\r\n\r\n          <button className=\"submit-form-btn\" type=\"submit\">\r\n            Add Contact\r\n          </button>\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./contactList.scss\";\r\nimport \"font-awesome/css/font-awesome.min.css\";\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => (\r\n  <div className=\"contacts-info-table\">\r\n    <ul className=\"list\">\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li className=\"actions\" key={id}>\r\n          <span className=\"listItemText\">{name}:</span>\r\n          <span className=\"listItemText\">{number}</span>\r\n          <button\r\n            className=\"button\"\r\n            type=\"button\"\r\n            onClick={() => onDeleteContact(id)}\r\n          >\r\n            <i className=\"fa fa-trash\" aria-hidden=\"true\"></i>\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  </div>\r\n);\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.array,\r\n  id: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./filter.scss\";\r\nconst Filter = ({ value, onChange }) => (\r\n  <label className=\"filterLabel\">\r\n    Find contacts by name\r\n    <input\r\n      className=\"searchInput\"\r\n      type=\"text\"\r\n      value={value}\r\n      onChange={onChange}\r\n    />\r\n  </label>\r\n);\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import React, { Component } from \"react\";\nimport Form from \"./components/Form/form\";\nimport ContactList from \"./components/ContactList/contactList\";\nimport Filter from \"./components/Filter/filter\";\nimport shortid from \"shortid\";\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n\n  formSubmitHandler = (name, number) => {\n    const { contacts } = this.state;\n\n    const newContact = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n    if (contacts.find((contact) => contact.name === newContact.name)) {\n      alert(`${newContact.name} is already in contacts.`);\n      return;\n    }\n\n    this.setState(({ contacts }) => ({\n      contacts: [newContact, ...contacts],\n    }));\n  };\n\n  changeFilter = (e) => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  getContacts = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  deleteContact = (contactId) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter(\n        (contact) => contact.id !== contactId\n      ),\n    }));\n  };\n  render() {\n    const { filter } = this.state;\n    const visibleContacts = this.getContacts();\n\n    return (\n      <>\n        <h1>Phonebook</h1>\n        <Form onSubmit={this.formSubmitHandler} />\n        <h2>Contacts</h2>\n        <Filter value={filter} onChange={this.changeFilter} />\n        <ContactList\n          contacts={visibleContacts}\n          onDeleteContact={this.deleteContact}\n        />\n      </>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}